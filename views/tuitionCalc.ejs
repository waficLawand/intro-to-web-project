<%include partials/header%>

<form class="calc" id="regForm">
<h1 id="h1calc">Tuition Calculator</h1>
<!-- first tab -->
<div class="tab">Number of Credits:<br><br>
    <p><input type ="number" id="uni" placeholder="University Credits" oninput="this.className = ''" ></p>
    <p><input type="number" id="fac" placeholder="Faculty Credits" oninput="this.className = ''"></p>
 </div>
<!-- second tab -->
<div class="tab"><p>Level of Studies:
<select oninput="this.className = ''" id="gradUnder">
    <option value="grad">Graduate Studies</option>
    <option value="undergrad">Undergraduate Studies</option>
</select></p>Status:
<select id="newOld">
  <option value="new">New Student (after 2018-2019)</option>
  <option value="old">Old Student (before 2018-2019)</option>
</select>
</div>
<!-- third tab -->
<div class="tab">Select Faculty:
    <select oninput="this.className = ''">
      <option value="engineering">Engineering</option>
    </select>
</div>

<div class="tab">Transportation:
    <select oninput="this.className = ''" id="transport">
      <option value="notrans">No Transportation</option>
      <option value="one">One Semester</option>
      <option value="two">Two Semesters</option>
      <option value="full">Full Year (including Summer Semester)</option>
    </select>
    <p id="insur1"><input type="checkbox" name="insur" id="insur" checked><label for="insur">National Social Security Health Insurance</label></p>
</div>

<div style="overflow:auto;">
    <div style="float:right;">
      <button type="button" id="prevBtn" onclick="nextPrev(-1)" >Previous</button>
      <button type="button" id="nextBtn" onclick="nextPrev(1)" >Next</button>
    </div>
  </div>

  <div style="text-align:center;margin-top:40px;">
      <span class="step"></span>
      <span class="step"></span>
      <span class="step"></span>
      <span class="step"></span>
    </div>
  </form>

<script>
// Form Manipulation

var currentTab = 0; // Current tab is set to be the first tab (0)
showTab(currentTab); // Display the current tab

function showTab(n) {
  // This function will display the specified tab of the form 
  var x = document.getElementsByClassName("tab");
  x[n].style.display = "block";
  // ... and fix the Previous/Next buttons:
  if (n == 0) {
    document.getElementById("prevBtn").style.display = "none";
  } else {
    document.getElementById("prevBtn").style.display = "inline";
  }
  if (n == (x.length - 1)) {
    var button =document.getElementById("nextBtn");
    document.getElementById("nextBtn").innerHTML = "Calculate";
    button.id ="calculate";
    button.addEventListener("click",function(){
      
      //Calculation
    

      var uniCourses,facultyCourses,transp, health;
      var typeOfStudent =document.getElementById("newOld").value;
      var uniCredits = document.getElementById("uni").value;
      var facultyCredits = document.getElementById("fac").value;
      var level = document.getElementById("gradUnder").value;
      var modeOfTransp = document.getElementById("transport").value;
      
      if(typeOfStudent === "new")
      {
        uniCourses= 250000*parseInt(uniCredits);
        if(level ==="undergrad"){
        facultyCourses = 495000*parseInt(facultyCredits);}
        else if(level ==="grad"){
          facultyCourses= 750000*parseInt(facultyCredits);
        }
      } else if(typeOfStudent==="old"){
        uniCourses= 240000*parseInt(uniCredits);
        if(level ==="undergrad"){
        facultyCourses = 480000*parseInt(facultyCredits);}
        else if(level ==="grad"){
          facultyCourses= 750000*parseInt(facultyCredits);
        }
      }
       if(modeOfTransp==="no trans"){
       transp=0;
      } else if(modeOfTransp==="one"){
       transp=360000;
      } else if(modeOfTransp==="two"){
        transp=648000;
      } else{
       transp=810000;
      }
      if(insur.checked){
      health = 203500;
      }else {
      health = 0;
      }
    var total= facultyCourses+uniCourses+transp+health;
    //Display Results
          var body = document.getElementsByTagName("form")[0];

      // creates a <table> element and a <tbody> element
      var tbl = document.createElement("table");
      var tblBody = document.createElement("tbody");

      // creating all cells
      for (var i = 0; i < 2; i++) {
        // creates a table row
        var row = document.createElement("tr");

        for (var j = 0; j < 2; j++) {

          var cell = document.createElement("td");
          var cellText = document.createTextNode("cell in row "+i+", column "+j);
          cell.appendChild(cellText);
          row.appendChild(cell);
        }

        // add the row to the end of the table body
        tblBody.appendChild(row);
      }

      // put the <tbody> in the <table>
      tbl.appendChild(tblBody);
      // appends <table> into <body>
      body.appendChild(tbl);
      // sets the border attribute of tbl to 2;
      tbl.setAttribute("border", "2");
    });

    
  } else {
    document.getElementById("nextBtn").innerHTML = "Next";
  }
  // ... and run a function that displays the correct step indicator:
  fixStepIndicator(n)
}

function nextPrev(n) {
  // This function will figure out which tab to display
  var x = document.getElementsByClassName("tab");
  // Exit the function if any field in the current tab is invalid:
  if (n == 1 && !validateForm()) return false;
  // Hide the current tab:
  x[currentTab].style.display = "none";
  // Increase or decrease the current tab by 1:
  currentTab = currentTab + n;
  // if you have reached the end of the form... :
  if (currentTab >= x.length) {
    //...the form gets submitted:
    document.getElementById("regForm").submit();
    return false;
  }
  // Otherwise, display the correct tab:
  showTab(currentTab);
}

function validateForm() {
  // This function deals with validation of the form fields
  var x, y, i, valid = true;
  x = document.getElementsByClassName("tab");
  y = x[currentTab].getElementsByTagName("input");
  // A loop that checks every input field in the current tab:
  for (i = 0; i < y.length; i++) {
    // If a field is empty...
    if (y[i].value == "") {
      // add an "invalid" class to the field:
      y[i].className += " invalid";
      // and set the current valid status to false:
      valid = false;
    }
  }
  // If the valid status is true, mark the step as finished and valid:
  if (valid) {
    document.getElementsByClassName("step")[currentTab].className += " finish";
  }
  return valid; // return the valid status
}

function fixStepIndicator(n) {
  // This function removes the "active" class of all steps...
  var i, x = document.getElementsByClassName("step");
  for (i = 0; i < x.length; i++) {
    x[i].className = x[i].className.replace(" active", "");
  }
  //... and adds the "active" class to the current step:
  x[n].className += " active";
}


  </script>
  <%include partials/footer%>