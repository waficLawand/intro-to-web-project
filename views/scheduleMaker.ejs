<!doctype html>
<html>
<head>
<title>BAU iTools</title>


<script src="scripts/xlsx.full.min.js"></script>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="/stylesheets/bootstrap.min.css">
<script src="/scripts/jquery.min.js"></script>
<script src="/scripts/bootstrap.min.js"></script>
<script src="/scripts/moment-with-locales.min.js"></script>
<script src="/scripts/jquery.touchSwipe.min.js"></script>
<script src="/scripts/jquery-calendar.min.js"></script>
<link rel="stylesheet" href="/stylesheets/jquery-calendar.min.css">
<link rel="stylesheet" href="/stylesheets/fontawesome.css">
<link rel='icon' href='/assets/no_name1.ico' type='image/x-icon' height:17px/>
<link rel="stylesheet" href="/stylesheets/fa-solid.css">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="/stylesheets/main.css">
    <title>BAU iTools</title>
    <!-- Font Family -->
    <link href="https://fonts.googleapis.com/css?family=Old+Standard+TT" rel="stylesheet">
    <!-- Bootstrap core CSS -->
    <link href="../../dist/css/bootstrap.min.css" rel="stylesheet">


</head>
<body>


    <nav class="navbar navbar-expand-md navbar-dark fixed-top bg-dark">
        <img width="55" height ="55" id="navlogo" src="/assets/no_name1.png">
        <a class="navbar-brand" href="/secret">BAU iTools</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarsExampleDefault" aria-controls="navbarsExampleDefault" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
  
        <div class="collapse navbar-collapse" id="navbarsExampleDefault">
          <ul class="navbar-nav mr-auto">
            <li class="nav-item active">
              <a class="nav-link" href="/secret">Home <span class="sr-only">(current)</span></a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/pdfs/CV.pdf">About</a>
            </li>
            <li class="nav-item">
              <a class="nav-link disabled" href="mailto:hr@bauitools.com">Contact Us</a>
            </li>
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="http://example.com" id="dropdown01" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Tools</a>
              <div class="dropdown-menu" aria-labelledby="dropdown01">
                <a class="dropdown-item" href="/scheduleMaker" style="color:#40356f">Schedule Maker</a>
                <a class="dropdown-item" href="/tuitionCalculator">Tuition Calculator</a>
                <a class="dropdown-item" href="/petitions">Petition Submission</a>
              </div>
            </li>
          </ul>
          <ul class="nav navbar-nav navbar-right">
              <%if (loginStatus) {%>
                
                <li class="nav-item active">
                  <a class="nav-link" href="/logout">Logout <span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item active">
                    <a class="nav-link" href="/#"><%= user %> <span class="sr-only">(current)</span></a>
                  </li>
                  
                <% } else { %>
  
            <li class="nav-item active">
              <a class="nav-link" href="/register">Sign Up <span class="sr-only">(current)</span><i class="fa fa-user-plus"></i></a>
            </li>
            <li class="nav-item active">
              
              <a class="nav-link" href="/login">Log In <span class="sr-only">(current)</span><i class="fa fa-user"></i></a>
            </li>
            <% }%>
            
          </ul>
        </div>
      </nav>

      <section class="jumbotron text-center">
          <div class="container">
              <div class="tab">
            <h1 class="jumbotron-heading">Schedule Maker</h1>
            <p class="lead text-muted">How many courses are you willing to register this semester?</p>
        
         
                <div class="qty mt-5" id="numberOfCourses">
                    <span class="minus addSubtract">-</span>
                    <input type="number" id="count" name="qty" value="1">
                    <span class="plus addSubtract">+</span>
                </div>
                <script>
                		$(document).ready(function(){
		    $('#count').prop('disabled', true);
   			$(document).on('click','.plus',function(){
				$('#count').val(parseInt($('#count').val()) + 1 );
    		});
        	$(document).on('click','.minus',function(){
    			$('#count').val(parseInt($('#count').val()) - 1 );
    				if ($('#count').val() == 0) {
						$('#count').val(1);
					}
    	    	});
 		});
                </script>
                    <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
              </div>
              <div class="tab courseName" >
                  <h1 class="jumbotron-heading">Schedule Maker</h1>
                  <p class="lead text-muted">Please enter course names</p>



                  <div id="inputCourseNumber">
                     

                  </div>
                  <div>
                      <button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
                  <button type="button" id="findSchedules">Find Schedules</button>
                  
                </div>
              </div>


<div >
  <div id="nextTab">
    
  

  </div>
</div>
              
  <div style="text-align:center;margin-top:40px;">
    <span class="step"></span>
    <span class="step"></span>
  
      

  </div>
  <script>

      var currentTab = 0; // Current tab is set to be the first tab (0)
      showTab(currentTab); // Display the current tab
      
      function showTab(n) {
        // This function will display the specified tab of the form ...
        var x = document.getElementsByClassName("tab");
        x[n].style.display = "block";
        // ... and fix the Previous/Next buttons:
        if (n == 0) {
          document.getElementById("prevBtn").style.display = "none";
        } else {
          document.getElementById("prevBtn").style.display = "inline";
        }
        if (n == (x.length - 1)) {
          document.getElementById("nextBtn").hidden();

          var para = document.createElement("button");                       // Create a <p> element
var t = document.createTextNode("Find Schedules");      // Create a text node
para.appendChild(t);                                          // Append the text to <p>
document.getElementById("nextTab").appendChild(para); 
         
        } else {
          document.getElementById("nextBtn").innerHTML = "Next";
        }
        // ... and run a function that displays the correct step indicator:
        fixStepIndicator(n)
      }
      
      function nextPrev(n) {
        var coursesCount = document.getElementById("count").value;
        
        var inputCourseNumber = document.getElementById("inputCourseNumber");
        
        while (inputCourseNumber.hasChildNodes()) {
                inputCourseNumber.removeChild(inputCourseNumber.lastChild);
            }

        for (i=0;i<coursesCount;i++){
                // Append a node with a random text
               // inputCourseNumber.appendChild(document.createTextNode("Course " + (i+1)+":  "));
               
                // Create an <input> element, set its type and name attributes
                var input = document.createElement("input");
              
                input.type = "text";
                input.name = "member" + i;
                input.id = "course"+(i+1);
                input.placeholder="Course "+(i+1);
                inputCourseNumber.appendChild(input);
                // Append a line break 
                inputCourseNumber.appendChild(document.createElement("br"));
            }


        // This function will figure out which tab to display
        var x = document.getElementsByClassName("tab");
        // Exit the function if any field in the current tab is invalid:
     
        // Hide the current tab:
        x[currentTab].style.display = "none";
        // Increase or decrease the current tab by 1:
        currentTab = currentTab + n;
        // if you have reached the end of the form... :
        if (currentTab >= x.length) {
          //...the form gets submitted:
          //document.getElementById("regForm").submit();



          
          return false;
        }
        // Otherwise, display the correct tab:
        showTab(currentTab);
      }
      
      function validateForm() {
        // This function deals with validation of the form fields
        var x, y, i, valid = true;
        x = document.getElementsByClassName("tab");
        y = x[currentTab].getElementsByTagName("input");
        // A loop that checks every input field in the current tab:
        for (i = 0; i < y.length; i++) {
          // If a field is empty...
          if (y[i].value == "") {
            // add an "invalid" class to the field:
            y[i].className += " invalid";
            // and set the current valid status to false:
            valid = false;
          }
        }
        // If the valid status is true, mark the step as finished and valid:
        if (valid) {
          document.getElementsByClassName("step")[currentTab].className += " finish";
        }
        return valid; // return the valid status
      }
      
      function fixStepIndicator(n) {
        // This function removes the "active" class of all steps...
        var i, x = document.getElementsByClassName("step");
        for (i = 0; i < x.length; i++) {
          x[i].className = x[i].className.replace(" active", "");
        }
        //... and adds the "active" class to the current step:
        x[n].className += " active";
      }
      
        </script>
  
       
          </div>

        </section>
    <div id= "nbOfScheds">
      <span id="navigatingThroughScheds"></span>

    </div>


  
    
            <div id="calendar"></div>
            
         
      </div>
   
  <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/2.4.1/lodash.min.js"></script>
  <script>
  _u = _.noConflict(); // lets call ourselves _u
  </script>
<script>



var number;

if( document.getElementById("nextBtn").innerHTML == "Find Schedules")
{
  
}


$("#nextBtn").click(function(){
 
// Number of inputs to create
number = document.getElementById("count").value;
           
                document.getElementById('findSchedules').addEventListener("click",function(){

                    var url = "/excelSheets/GVCourseOffering (3).xlsx";
            var oReq = new XMLHttpRequest();
            oReq.open("GET", url, true);
            oReq.responseType = "arraybuffer";
            var csv;
            var lala2=[];
            oReq.onload = function() {
              var arraybuffer = oReq.response;

              /* convert data to binary string */
              var data = new Uint8Array(arraybuffer);
              var arr = new Array();
              for(var i = 0; i != data.length; ++i) arr[i] = String.fromCharCode(data[i]);
              var bstr = arr.join("");

  /* Call XLSX */
  var workbook = XLSX.read(bstr, {type:"binary"});

  /* DO SOMETHING WITH workbook HERE */
  var first_sheet_name = workbook.SheetNames[0];
  /* Get worksheet */
  var worksheet = workbook.Sheets[first_sheet_name];

 csv = XLSX.utils.sheet_to_csv(worksheet,{raw:true});
   var lines = csv.split("\n");

console.log(csv);
   
var n =0;
var courseOffering = [];
var crn = [];
var userOffering = [];
var lala = [];
var finalSched = [];
var remainingCoursesOffering = [];
var organisedCourseOffering=[];
var newOrganisedCourseOffering=[];
var lala=[];


      
        for (var i = 1; i < lines.length-1; i++) {
    var crnNumber = lines[i].split(",")[n]; 
    var name = lines[i].split(",")[n+1];
    var crnDay =lines[i].split(",")[n+6]; 
    var crnTime = lines[i].split(",")[n+7];
    var type = lines[i].split(",")[n+5];
    var newTime = crnTime.split(" - ");
    var from = newTime[0];
    var to = newTime[1];
        

    crn[i]={"number":crnNumber,"from":from,"to":to,"day":crnDay};
    courseOffering.push({"name":name,"type":type,"CRN":crn[i]});
  }
if(number == 2)
{
    twoCourses(courseOffering,document.getElementById("course1").value,document.getElementById("course2").value);
} else if( number == 3)
{
    threeCourses(courseOffering,document.getElementById("course1").value,document.getElementById("course2").value,document.getElementById("course3").value);
} else if( number == 4)
{
    fourCourses(courseOffering,document.getElementById("course1").value,document.getElementById("course2").value,document.getElementById("course3").value,document.getElementById("course4").value);
} else if(number == 5)
{
    fiveCourses(courseOffering,document.getElementById("course1").value,document.getElementById("course2").value,document.getElementById("course3").value,document.getElementById("course4").value,document.getElementById("course5").value);
} else if ( number == 6)
{
    sixCourses(courseOffering,document.getElementById("course1").value,document.getElementById("course2").value,document.getElementById("course3").value,document.getElementById("course4").value,document.getElementById("course5").value,document.getElementById("course6").value);
} else if( number == 7)
{
    sevenCourses(courseOffering,document.getElementById("course1").value,document.getElementById("course2").value,document.getElementById("course3").value,document.getElementById("course4").value,document.getElementById("course5").value,document.getElementById("course6").value,document.getElementById("course7").value);
} else if( number == 8)
{
    eightCourses(courseOffering,document.getElementById("course1").value,document.getElementById("course2").value,document.getElementById("course3").value,document.getElementById("course4").value,document.getElementById("course5").value,document.getElementById("course6").value,document.getElementById("course7").value,document.getElementById("course8").value);
} else if(number == 9)
{
    nineCourses(courseOffering,document.getElementById("course1").value,document.getElementById("course2").value,document.getElementById("course3").value,document.getElementById("course4").value,document.getElementById("course5").value,document.getElementById("course6").value,document.getElementById("course7").value,document.getElementById("course8").value,document.getElementById("course9").value);
} 

var result = false;
var randomNumber;
var newSchedule = [];
var brandNewSchedule=[];
var newSchedule2 = [];
var s = 0;
var l = false;
var  f= 0;
var l =0;
var bool;
var m = 0;
var counter = 0;
var lala;
var duplicateCounter = 0;
var scheds = [];


organiseUserOfferingOffering(userOffering);
organiseCourseOfferingToDouble(organisedCourseOffering);
console.log(organisedCourseOffering);
console.log(newOrganisedCourseOffering);


var a = cartesianProduct(newOrganisedCourseOffering);
console.log(a);

var allSchedules=[];
for(var x = 0;x<a.length;x++)
{ 
    if(!(checkForTimeCnflictInCartesianArray(a[x])))
    {
      allSchedules.push(a[x]);
    }
    else
    {
      continue;
    }
  
}

console.log(allSchedules);
function organiseUserOfferingOffering(userOffering1)
{ console.log(organisedCourseOffering);
  var n =0;
  var array=[];
  var array2=[];
  var counter =0;
  for(var i = 0;i<userOffering1.length;i++)
  {
  
      for(var j=0;j<userOffering1.length;j++)
      {
        if((userOffering1[i].CRN.number == userOffering[j].CRN.number))
        {
        
          array.push(userOffering1[j]);
        
      
        }
      }
      

      if(check2(array,organisedCourseOffering) == true)
      {
        array = [];
      }
      else
      {
        organisedCourseOffering.push(array);
          array=[];
      }
  }
  
}




function check2(array,org)
{
  var n =0;
  if(org.length == 0)
  {
    return false;
  }
    for(var i=0;i<array.length;i++)
    {
      for(var j=0;j<org.length;j++)
      {
        for(var k=0;k<org[j].length;k++)
        {
          if(array[i].CRN.number == org[j][k].CRN.number)
          {
           n++; 
          }
        }
      }
    }
    if(n==0)
    {
      return false;
    }
    else if(n% array.length == 0)
    {
      console.log(n);
      return true;
    }
  
     else
    {
      return false;
    }
}


    
function addingElementsToDoubleArray(arr,org)
{
  if(org.length == 0)
  {
    return true;
  }
  
    if(arr[0].name == org[0][0].name)
    {
      return true;
    } else
    {
      return false;
    }
  
}
function organiseCourseOfferingToDouble(org)
{
  var uniqueCounter =0;
  var arrayCounter= 0;
  var array2=[];
  while(uniqueCounter<org.length)
  {
    array2.push(org[uniqueCounter]);
    
    console.log(array2[0][0].name);
    console.log(org[counter]);
    for(var f=0;f<org.length;f++)
    {
      if((org[f][0].name == array2[0][0].name)&&!(org[f][0].CRN.number == array2[0][0].CRN.number))
      {
        array2.push(org[f]);
       uniqueCounter++;
      }
      console.log(org[f]);
    }
    newOrganisedCourseOffering.push(array2);
    array2=[];
    uniqueCounter++;
  }
}

function cartesianProduct(arr)
{
    return arr.reduce(function(a,b){
        return a.map(function(x){
            return b.map(function(y){
                return x.concat(y);
            })
        }).reduce(function(a,b){ return a.concat(b) },[])
    }, [[]])
}


function checkForTimeCnflictInCartesianArray(org)
{
  for(var i = 0; i< (org.length)-1;i++)
  {
    for(var j=i+1;j<org.length;j++)
    {
      if(org[i].CRN.number == org[j].CRN.number)
      {
        continue;
      }
      if(((org[i].CRN.from == org[j].CRN.from)&& (org[i].CRN.day == org[j].CRN.day)) || ((org[i].CRN.to == org[j].CRN.to)&& (org[i].CRN.day == org[j].CRN.day)) || ((org[i].CRN.from < org[j].CRN.from)&&(org[i].CRN.to>org[j].CRN.from)&& (org[i].CRN.day == org[j].CRN.day)) || ((org[i].CRN.from < org[j].CRN.to) && (org[i].CRN.to>org[j].CRN.to)&& (org[i].CRN.day == org[j].CRN.day)))
      {
        console.log(org[i].CRN.from+" "+org[i].CRN.to+" "+org[j].CRN.from+" "+org[j].CRN.to);
        return true;
      } 
    }
  }
  return false;
}
var schedCounter =0;
var initialEvent =[];
var events =[];
var monday = [];
var tuesday =[];
var wednesday =[];
var thursday =[];
var friday=[];

if(allSchedules.length>0)
{
  var next =document.createElement('button');  
  next.id = "next";
    var text = document.createTextNode(">");
    next.appendChild(text);
    var previous =document.createElement('button');  

  document.getElementById("nbOfScheds").appendChild(next);


  var schedText = document.createElement("span");
      schedText.id = "schedText";
      schedText.innerHTML=(schedCounter+1)+"/"+allSchedules.length+"";
      document.getElementById("nbOfScheds").appendChild(schedText);
  previous.id = "previous";
    var text = document.createTextNode("<");
    previous.appendChild(text);
    previous.disabled = true;
    document.getElementById("nbOfScheds").appendChild(previous);
}

  for(var j =0;j<allSchedules[0].length;j++)
  {
    if(allSchedules[0][j].CRN.day == "Monday")
    {
      monday.push(allSchedules[0][j]);
    } else if(allSchedules[0][j].CRN.day == "Tuesday")
    {
      tuesday.push(allSchedules[0][j]);
    } else if(allSchedules[0][j].CRN.day == "Wednesday")
    {
      wednesday.push(allSchedules[0][j]);
    } else if(allSchedules[0][j].CRN.day == "Thursday")
    {
      thursday.push(allSchedules[0][j]);
    } else if(allSchedules[0][j].CRN.day == "Friday")
    {
      friday.push(allSchedules[0][j]);
    }
  }

   timeSort(monday);
timeSort(tuesday);
timeSort(wednesday);
timeSort(thursday);
timeSort(friday);
eleminateRepitition(monday);
eleminateRepitition(tuesday);
eleminateRepitition(wednesday);
eleminateRepitition(thursday);
eleminateRepitition(friday);
console.log(monday);
console.log(tuesday);
console.log(wednesday);
console.log(thursday);
console.log(friday);




 


 



for(var i=0;i<monday.length;i++)
{
       moment.locale('en');
      var now = moment();
  var fromHours,fromMinutes,toHours,toMinutes;
  fromHours= parseInt(monday[i].CRN.from.slice(0,2));
  fromMinutes=parseInt(monday[i].CRN.from.slice(2,4));
  toHours = parseInt(monday[i].CRN.to.slice(0,2));
  toMinutes=parseInt(monday[i].CRN.to.slice(2,4));

  initialEvent={ start: now.startOf('week').add(1, 'days').add(fromHours, 'h').add(fromMinutes,'m').format('X'),
          end: now.startOf('week').add(1, 'days').add(toHours, 'h').add(toMinutes,'m').format('X'),
          title: monday[i].name+'\n'+monday[i].CRN.number,
          content: monday[i].type,
          category:'Personnal'};
          events.push(initialEvent);

  console.log(fromMinutes);
  console.log(to);

}

for(var i=0;i<tuesday.length;i++)
{
       moment.locale('en');
      var now = moment();
  var fromHours,fromMinutes,toHours,toMinutes;
  fromHours= parseInt(tuesday[i].CRN.from.slice(0,2));
  fromMinutes=parseInt(tuesday[i].CRN.from.slice(2,4));
  toHours = parseInt(tuesday[i].CRN.to.slice(0,2));
  toMinutes=parseInt(tuesday[i].CRN.to.slice(2,4));

  initialEvent={ start: now.startOf('week').add(2, 'days').add(fromHours, 'h').add(fromMinutes,'m').format('X'),
          end: now.startOf('week').add(2, 'days').add(toHours, 'h').add(toMinutes,'m').format('X'),
          title: tuesday[i].name+'\n'+tuesday[i].CRN.number,
          content: tuesday[i].type,
          category:'Professionnal'};
          events.push(initialEvent);

  console.log(fromMinutes);
  console.log(to);

}

for(var i=0;i<wednesday.length;i++)
{
       moment.locale('en');
      var now = moment();
  var fromHours,fromMinutes,toHours,toMinutes;
  fromHours= parseInt(wednesday[i].CRN.from.slice(0,2));
  fromMinutes=parseInt(wednesday[i].CRN.from.slice(2,4));
  toHours = parseInt(wednesday[i].CRN.to.slice(0,2));
  toMinutes=parseInt(wednesday[i].CRN.to.slice(2,4));

  initialEvent={ start: now.startOf('week').add(3, 'days').add(fromHours, 'h').add(fromMinutes,'m').format('X'),
          end: now.startOf('week').add(3, 'days').add(toHours, 'h').add(toMinutes,'m').format('X'),
          title: wednesday[i].name+'\n'+wednesday[i].CRN.number,
          content: wednesday[i].type,
          category:'Arrobe'};
          events.push(initialEvent);

  console.log(fromMinutes);
  console.log(to);

}

for(var i=0;i<thursday.length;i++)
{
       moment.locale('en');
      var now = moment();
  var fromHours,fromMinutes,toHours,toMinutes;
  fromHours= parseInt(thursday[i].CRN.from.slice(0,2));
  fromMinutes=parseInt(thursday[i].CRN.from.slice(2,4));
  toHours = parseInt(thursday[i].CRN.to.slice(0,2));
  toMinutes=parseInt(thursday[i].CRN.to.slice(2,4));

  initialEvent={ start: now.startOf('week').add(4, 'days').add(fromHours, 'h').add(fromMinutes,'m').format('X'),
          end: now.startOf('week').add(4, 'days').add(toHours, 'h').add(toMinutes,'m').format('X'),
          title: thursday[i].name+'\n'+thursday[i].CRN.number,
          content: thursday[i].type,
          category:'Private'};
          events.push(initialEvent);

  console.log(fromMinutes);
  console.log(to);

}

for(var i=0;i<friday.length;i++)
{
       moment.locale('en');
      var now = moment();
  var fromHours,fromMinutes,toHours,toMinutes;
  fromHours= parseInt(friday[i].CRN.from.slice(0,2));
  fromMinutes=parseInt(friday[i].CRN.from.slice(2,4));
  toHours = parseInt(friday[i].CRN.to.slice(0,2));
  toMinutes=parseInt(friday[i].CRN.to.slice(2,4));

  initialEvent={ start: now.startOf('week').add(5, 'days').add(fromHours, 'h').add(fromMinutes,'m').format('X'),
          end: now.startOf('week').add(5, 'days').add(toHours, 'h').add(toMinutes,'m').format('X'),
          title: friday[i].name+'\n'+friday[i].CRN.number,
          content: friday[i].type,
          category:'Anything else'};
          events.push(initialEvent);

  console.log(fromMinutes);
  console.log(to);

}




console.log(events);








var mondaySched = '';
var hours;

console.log(mondaySched);

var div = document.createElement("div");
div.id="calendar";

$(document).ready(function(){
      moment.locale('en');
      var now = moment();
      console.log(events);
      var daynotes = [
        {
          time: now.startOf('week').add(15, 'h').add(30, 'm').format('X'),
          title: 'Leo\'s holiday',
          content: 'yo',
          category: 'holiday'
        }
      ];

      /**
       * Init the calendar
       */
      var calendar = $('#calendar').Calendar({
        locale: 'en',
        weekday: {
    timeline: {
      fromHour: 8, // start hour
      toHour: 18, // end hour
      intervalMinutes: 30,
      format: 'HH:mm',
      heightPx: 50,
      autoResize: true
    },
    dayline: {
      weekdays: [1, 2, 3, 4, 5, 6],
      format: 'dddd DD/MM',
      heightPx: 31,
      month: {
        format: 'MMMM YYYY',
        heightPx: 30,
        weekFormat: 'w'
      }
    }
  },
      
        events: events,
        daynotes: daynotes
      }).init();

      /**
       * Listening for events
       */

      $('#calendar').on('Calendar.init', function(event, instance, before, current, after){
        console.log('event : Calendar.init');
        console.log(instance);
        console.log(before);
        console.log(current);
        console.log(after);
      });
      $('#calendar').on('Calendar.daynote-mouseenter', function(event, instance, elem){
        console.log('event : Calendar.daynote-mouseenter');
        console.log(instance);
        console.log(elem);
      });
      $('#calendar').on('Calendar.daynote-mouseleave', function(event, instance, elem){
        console.log('event : Calendar.daynote-mouseleave');
        console.log(instance);
        console.log(elem);
      });
      $('#calendar').on('Calendar.event-mouseenter', function(event, instance, elem){
        console.log('event : Calendar.event-mouseenter');
        console.log(instance);
        console.log(elem);
      });
      $('#calendar').on('Calendar.event-mouseleave', function(event, instance, elem){
        console.log('event : Calendar.event-mouseleave');
        console.log(instance);
        console.log(elem);
      });
      $('#calendar').on('Calendar.daynote-click', function(event, instance, elem, evt){
        console.log('event : Calendar.daynote-click');
        console.log(instance);
        console.log(elem);
        console.log(evt);
      });
      $('#calendar').on('Calendar.event-click', function(event, instance, elem, evt){
        console.log('event : Calendar.event-click');
        console.log(instance);
        console.log(elem);
        console.log(evt);
      });
});
document.body.appendChild(div);

console.log(schedCounter);
 

$("#next").on("click",function(){
  console.log(schedCounter);

if(schedCounter>=0)
{
  document.getElementById("previous").disabled = false;
}
console.log(allSchedules.length-1);
if(schedCounter+1 < (allSchedules.length))
{$("#calendar").remove();}

div = document.createElement("div");
div.id="calendar";

  events=[];
 initialEvent ='';
events =[];
monday = [];
 tuesday =[];
 wednesday =[];
 thursday =[];
 friday=[];

  schedCounter++;
  document.getElementById("navigatingThroughScheds").innerHTML=(schedCounter+1)+"/"+allSchedules.length+"";

if(schedCounter<(allSchedules.length))
{

for(var j =0;j<allSchedules[schedCounter].length;j++)
  {
    if(allSchedules[schedCounter][j].CRN.day == "Monday")
    {
      monday.push(allSchedules[schedCounter][j]);
    } else if(allSchedules[schedCounter][j].CRN.day == "Tuesday")
    {
      tuesday.push(allSchedules[schedCounter][j]);
    } else if(allSchedules[schedCounter][j].CRN.day == "Wednesday")
    {
      wednesday.push(allSchedules[schedCounter][j]);
    } else if(allSchedules[schedCounter][j].CRN.day == "Thursday")
    {
      thursday.push(allSchedules[schedCounter][j]);
    } else if(allSchedules[schedCounter][j].CRN.day == "Friday")
    {
      friday.push(allSchedules[schedCounter][j]);
    }
  }

   timeSort(monday);
timeSort(tuesday);
timeSort(wednesday);
timeSort(thursday);
timeSort(friday);
eleminateRepitition(monday);
eleminateRepitition(tuesday);
eleminateRepitition(wednesday);
eleminateRepitition(thursday);
eleminateRepitition(friday);
console.log(monday);
console.log(tuesday);
console.log(wednesday);
console.log(thursday);
console.log(friday);




 



  
for(var i=0;i<monday.length;i++)
{
       moment.locale('en');
      var now = moment();
  var fromHours,fromMinutes,toHours,toMinutes;
  fromHours= parseInt(monday[i].CRN.from.slice(0,2));
  fromMinutes=parseInt(monday[i].CRN.from.slice(2,4));
  toHours = parseInt(monday[i].CRN.to.slice(0,2));
  toMinutes=parseInt(monday[i].CRN.to.slice(2,4));

  initialEvent={ start: now.startOf('week').add(1, 'days').add(fromHours, 'h').add(fromMinutes,'m').format('X'),
          end: now.startOf('week').add(1, 'days').add(toHours, 'h').add(toMinutes,'m').format('X'),
          title: monday[i].name+'\n'+monday[i].CRN.number,
          content: monday[i].type,
          category:'Personnal'};
          events.push(initialEvent);

  console.log(fromMinutes);
  console.log(to);

}

for(var i=0;i<tuesday.length;i++)
{
       moment.locale('en');
      var now = moment();
  var fromHours,fromMinutes,toHours,toMinutes;
  fromHours= parseInt(tuesday[i].CRN.from.slice(0,2));
  fromMinutes=parseInt(tuesday[i].CRN.from.slice(2,4));
  toHours = parseInt(tuesday[i].CRN.to.slice(0,2));
  toMinutes=parseInt(tuesday[i].CRN.to.slice(2,4));

  initialEvent={ start: now.startOf('week').add(2, 'days').add(fromHours, 'h').add(fromMinutes,'m').format('X'),
          end: now.startOf('week').add(2, 'days').add(toHours, 'h').add(toMinutes,'m').format('X'),
          title: tuesday[i].name+'\n'+tuesday[i].CRN.number,
          content: tuesday[i].type,
          category:'Professionnal'};
          events.push(initialEvent);

  console.log(fromMinutes);
  console.log(to);

}

for(var i=0;i<wednesday.length;i++)
{
       moment.locale('en');
      var now = moment();
  var fromHours,fromMinutes,toHours,toMinutes;
  fromHours= parseInt(wednesday[i].CRN.from.slice(0,2));
  fromMinutes=parseInt(wednesday[i].CRN.from.slice(2,4));
  toHours = parseInt(wednesday[i].CRN.to.slice(0,2));
  toMinutes=parseInt(wednesday[i].CRN.to.slice(2,4));

  initialEvent={ start: now.startOf('week').add(3, 'days').add(fromHours, 'h').add(fromMinutes,'m').format('X'),
          end: now.startOf('week').add(3, 'days').add(toHours, 'h').add(toMinutes,'m').format('X'),
          title: wednesday[i].name+'\n'+wednesday[i].CRN.number,
          content: wednesday[i].type,
          category:'Arrobe'};
          events.push(initialEvent);

  console.log(fromMinutes);
  console.log(to);

}

for(var i=0;i<thursday.length;i++)
{
       moment.locale('en');
      var now = moment();
  var fromHours,fromMinutes,toHours,toMinutes;
  fromHours= parseInt(thursday[i].CRN.from.slice(0,2));
  fromMinutes=parseInt(thursday[i].CRN.from.slice(2,4));
  toHours = parseInt(thursday[i].CRN.to.slice(0,2));
  toMinutes=parseInt(thursday[i].CRN.to.slice(2,4));

  initialEvent={ start: now.startOf('week').add(4, 'days').add(fromHours, 'h').add(fromMinutes,'m').format('X'),
          end: now.startOf('week').add(4, 'days').add(toHours, 'h').add(toMinutes,'m').format('X'),
          title: thursday[i].name+'\n'+thursday[i].CRN.number,
          content: thursday[i].type,
          category:'Private'};
          events.push(initialEvent);

  console.log(fromMinutes);
  console.log(to);

}

for(var i=0;i<friday.length;i++)
{
       moment.locale('en');
      var now = moment();
  var fromHours,fromMinutes,toHours,toMinutes;
  fromHours= parseInt(friday[i].CRN.from.slice(0,2));
  fromMinutes=parseInt(friday[i].CRN.from.slice(2,4));
  toHours = parseInt(friday[i].CRN.to.slice(0,2));
  toMinutes=parseInt(friday[i].CRN.to.slice(2,4));

  initialEvent={ start: now.startOf('week').add(5, 'days').add(fromHours, 'h').add(fromMinutes,'m').format('X'),
          end: now.startOf('week').add(5, 'days').add(toHours, 'h').add(toMinutes,'m').format('X'),
          title: friday[i].name+'\n'+friday[i].CRN.number,
          content: friday[i].type,
          category:'Anything else'};
          events.push(initialEvent);

  console.log(fromMinutes);
  console.log(to);

}




console.log(events);








$(document).ready(function(){
      moment.locale('en');
      var now = moment();
      console.log(events);
      var daynotes = [
        {
          time: now.startOf('week').add(15, 'h').add(30, 'm').format('X'),
          title: 'Leo\'s holiday',
          content: 'yo',
          category: 'holiday'
        }
      ];

      /**
       * Init the calendar
       */
      var calendar = $('#calendar').Calendar({
        locale: 'en',
        weekday: {
    timeline: {
      fromHour: 8, // start hour
      toHour: 18, // end hour
      intervalMinutes: 30,
      format: 'HH:mm',
      heightPx: 50,
      autoResize: true
    },
    dayline: {
      weekdays: [1, 2, 3, 4, 5, 6],
      format: 'dddd DD/MM',
      heightPx: 31,
      month: {
        format: 'MMMM YYYY',
        heightPx: 30,
        weekFormat: 'w'
      }
    }
  },
      
        events: events,
        daynotes: daynotes
      }).init();

      /**
       * Listening for events
       */

      $('#calendar').on('Calendar.init', function(event, instance, before, current, after){
        console.log('event : Calendar.init');
        console.log(instance);
        console.log(before);
        console.log(current);
        console.log(after);
      });
      $('#calendar').on('Calendar.daynote-mouseenter', function(event, instance, elem){
        console.log('event : Calendar.daynote-mouseenter');
        console.log(instance);
        console.log(elem);
      });
      $('#calendar').on('Calendar.daynote-mouseleave', function(event, instance, elem){
        console.log('event : Calendar.daynote-mouseleave');
        console.log(instance);
        console.log(elem);
      });
      $('#calendar').on('Calendar.event-mouseenter', function(event, instance, elem){
        console.log('event : Calendar.event-mouseenter');
        console.log(instance);
        console.log(elem);
      });
      $('#calendar').on('Calendar.event-mouseleave', function(event, instance, elem){
        console.log('event : Calendar.event-mouseleave');
        console.log(instance);
        console.log(elem);
      });
      $('#calendar').on('Calendar.daynote-click', function(event, instance, elem, evt){
        console.log('event : Calendar.daynote-click');
        console.log(instance);
        console.log(elem);
        console.log(evt);
      });
      $('#calendar').on('Calendar.event-click', function(event, instance, elem, evt){
        console.log('event : Calendar.event-click');
        console.log(instance);
        console.log(elem);
        console.log(evt);
      });
      
});
document.body.appendChild(div);
}
 else 
{
  $(this).prop("disabled",true);
}
});


$("#previous").on("click",function(){
  



console.log(allSchedules.length-1);
if(schedCounter > (allSchedules.length)-1)
{$("#calendar").remove();}

div = document.createElement("div");
div.id="calendar";

  events=[];
 initialEvent ='';
events =[];
monday = [];
 tuesday =[];
 wednesday =[];
 thursday =[];
 friday=[];

  schedCounter--;
  document.getElementById("navigatingThroughScheds").innerHTML=(schedCounter+1)+"/"+allSchedules.length+"";

if(schedCounter>=0)
{

document.getElementById("next").disabled = false;
for(var j =0;j<allSchedules[schedCounter].length;j++)
  {
    if(allSchedules[schedCounter][j].CRN.day == "Monday")
    {
      monday.push(allSchedules[schedCounter][j]);
    } else if(allSchedules[schedCounter][j].CRN.day == "Tuesday")
    {
      tuesday.push(allSchedules[schedCounter][j]);
    } else if(allSchedules[schedCounter][j].CRN.day == "Wednesday")
    {
      wednesday.push(allSchedules[schedCounter][j]);
    } else if(allSchedules[schedCounter][j].CRN.day == "Thursday")
    {
      thursday.push(allSchedules[schedCounter][j]);
    } else if(allSchedules[schedCounter][j].CRN.day == "Friday")
    {
      friday.push(allSchedules[schedCounter][j]);
    }
  }

   timeSort(monday);
timeSort(tuesday);
timeSort(wednesday);
timeSort(thursday);
timeSort(friday);
eleminateRepitition(monday);
eleminateRepitition(tuesday);
eleminateRepitition(wednesday);
eleminateRepitition(thursday);
eleminateRepitition(friday);
console.log(monday);
console.log(tuesday);
console.log(wednesday);
console.log(thursday);
console.log(friday);




 



  
for(var i=0;i<monday.length;i++)
{
       moment.locale('en');
      var now = moment();
  var fromHours,fromMinutes,toHours,toMinutes;
  fromHours= parseInt(monday[i].CRN.from.slice(0,2));
  fromMinutes=parseInt(monday[i].CRN.from.slice(2,4));
  toHours = parseInt(monday[i].CRN.to.slice(0,2));
  toMinutes=parseInt(monday[i].CRN.to.slice(2,4));

  initialEvent={ start: now.startOf('week').add(1, 'days').add(fromHours, 'h').add(fromMinutes,'m').format('X'),
          end: now.startOf('week').add(1, 'days').add(toHours, 'h').add(toMinutes,'m').format('X'),
          title: monday[i].name+'\n'+monday[i].CRN.number,
          content: monday[i].type,
          category:'Personnal'};
          events.push(initialEvent);

  console.log(fromMinutes);
  console.log(to);

}

for(var i=0;i<tuesday.length;i++)
{
       moment.locale('en');
      var now = moment();
  var fromHours,fromMinutes,toHours,toMinutes;
  fromHours= parseInt(tuesday[i].CRN.from.slice(0,2));
  fromMinutes=parseInt(tuesday[i].CRN.from.slice(2,4));
  toHours = parseInt(tuesday[i].CRN.to.slice(0,2));
  toMinutes=parseInt(tuesday[i].CRN.to.slice(2,4));

  initialEvent={ start: now.startOf('week').add(2, 'days').add(fromHours, 'h').add(fromMinutes,'m').format('X'),
          end: now.startOf('week').add(2, 'days').add(toHours, 'h').add(toMinutes,'m').format('X'),
          title: tuesday[i].name+'\n'+tuesday[i].CRN.number,
          content: tuesday[i].type,
          category:'Professionnal'};
          events.push(initialEvent);

  console.log(fromMinutes);
  console.log(to);

}

for(var i=0;i<wednesday.length;i++)
{
       moment.locale('en');
      var now = moment();
  var fromHours,fromMinutes,toHours,toMinutes;
  fromHours= parseInt(wednesday[i].CRN.from.slice(0,2));
  fromMinutes=parseInt(wednesday[i].CRN.from.slice(2,4));
  toHours = parseInt(wednesday[i].CRN.to.slice(0,2));
  toMinutes=parseInt(wednesday[i].CRN.to.slice(2,4));

  initialEvent={ start: now.startOf('week').add(3, 'days').add(fromHours, 'h').add(fromMinutes,'m').format('X'),
          end: now.startOf('week').add(3, 'days').add(toHours, 'h').add(toMinutes,'m').format('X'),
          title: wednesday[i].name+'\n'+wednesday[i].CRN.number,
          content: wednesday[i].type,
          category:'Arrobe'};
          events.push(initialEvent);

  console.log(fromMinutes);
  console.log(to);

}

for(var i=0;i<thursday.length;i++)
{
       moment.locale('en');
      var now = moment();
  var fromHours,fromMinutes,toHours,toMinutes;
  fromHours= parseInt(thursday[i].CRN.from.slice(0,2));
  fromMinutes=parseInt(thursday[i].CRN.from.slice(2,4));
  toHours = parseInt(thursday[i].CRN.to.slice(0,2));
  toMinutes=parseInt(thursday[i].CRN.to.slice(2,4));

  initialEvent={ start: now.startOf('week').add(4, 'days').add(fromHours, 'h').add(fromMinutes,'m').format('X'),
          end: now.startOf('week').add(4, 'days').add(toHours, 'h').add(toMinutes,'m').format('X'),
          title: thursday[i].name+'\n'+ thursday[i].CRN.number,
          content: thursday[i].type,
          category:'Private'};
          events.push(initialEvent);

  console.log(fromMinutes);
  console.log(to);

}

for(var i=0;i<friday.length;i++)
{
       moment.locale('en');
      var now = moment();
  var fromHours,fromMinutes,toHours,toMinutes;
  fromHours= parseInt(friday[i].CRN.from.slice(0,2));
  fromMinutes=parseInt(friday[i].CRN.from.slice(2,4));
  toHours = parseInt(friday[i].CRN.to.slice(0,2));
  toMinutes=parseInt(friday[i].CRN.to.slice(2,4));

  initialEvent={ start: now.startOf('week').add(5, 'days').add(fromHours, 'h').add(fromMinutes,'m').format('X'),
          end: now.startOf('week').add(5, 'days').add(toHours, 'h').add(toMinutes,'m').format('X'),
          title: friday[i].name+'\n'+friday[i].CRN.number,
          content: friday[i].type,
          category:'Anything else'};
          events.push(initialEvent);

  console.log(fromMinutes);
  console.log(to);

}




console.log(events);








$(document).ready(function(){
      moment.locale('en');
      var now = moment();
      console.log(events);
      var daynotes = [
        {
          time: now.startOf('week').add(15, 'h').add(30, 'm').format('X'),
          title: 'Leo\'s holiday',
          content: 'yo',
          category: 'holiday'
        }
      ];

      /**
       * Init the calendar
       */
      var calendar = $('#calendar').Calendar({
        locale: 'en',
        weekday: {
    timeline: {
      fromHour: 8, // start hour
      toHour: 18, // end hour
      intervalMinutes: 30,
      format: 'HH:mm',
      heightPx: 50,
      autoResize: true
    },
    dayline: {
      weekdays: [1, 2, 3, 4, 5, 6],
      format: 'dddd DD/MM',
      heightPx: 31,
      month: {
        format: 'MMMM YYYY',
        heightPx: 30,
        weekFormat: 'w'
      }
    }
  },
      
        events: events,
        daynotes: daynotes
      }).init();

      /**
       * Listening for events
       */

      $('#calendar').on('Calendar.init', function(event, instance, before, current, after){
        console.log('event : Calendar.init');
        console.log(instance);
        console.log(before);
        console.log(current);
        console.log(after);
      });
      $('#calendar').on('Calendar.daynote-mouseenter', function(event, instance, elem){
        console.log('event : Calendar.daynote-mouseenter');
        console.log(instance);
        console.log(elem);
      });
      $('#calendar').on('Calendar.daynote-mouseleave', function(event, instance, elem){
        console.log('event : Calendar.daynote-mouseleave');
        console.log(instance);
        console.log(elem);
      });
      $('#calendar').on('Calendar.event-mouseenter', function(event, instance, elem){
        console.log('event : Calendar.event-mouseenter');
        console.log(instance);
        console.log(elem);
      });
      $('#calendar').on('Calendar.event-mouseleave', function(event, instance, elem){
        console.log('event : Calendar.event-mouseleave');
        console.log(instance);
        console.log(elem);
      });
      $('#calendar').on('Calendar.daynote-click', function(event, instance, elem, evt){
        console.log('event : Calendar.daynote-click');
        console.log(instance);
        console.log(elem);
        console.log(evt);
      });
      $('#calendar').on('Calendar.event-click', function(event, instance, elem, evt){
        console.log('event : Calendar.event-click');
        console.log(instance);
        console.log(elem);
        console.log(evt);
      });
});


}

else
{
  $(this).prop("disabled",true);
}

});


//div.innerHTML=" <table border='1' width='100%'> <tr> <td>Time</td><td>Monday</td><td>Tuesday</td><td>Wednesday</td><td>Thrsday</td><td>Friday</td></tr><tr id='lala'> <td>8:00 a.m - 8:30 a.m</td>"+eight+"</tr><tr> <td>8:30 a.m - 9:00 a.m</td>"+eightThirty+"</tr><tr><td>9:00 a.m - 9:30 a.m</td>"+nine+"</tr><tr> <td>9:30 a.m - 10:00 a.m</td>"+nineThirty+"</tr><tr> <td>10:00 a.m - 10:30 a.m</td>"+ten+"</tr><tr> <td>10:30 a.m - 11:00 a.m</td>"+tenThirty+"</tr><tr> <td>11:00 a.m - 11:30 a.m</td>"+eleven+"</tr><tr><td>11:30 a.m - 12:00 a.m</td>"+elevenThirty+"</tr><tr><td>12:00 p.m - 12:30 p.m</td>"+twelve+"</tr><tr><td>12:30 p.m - 1:00 p.m</td>"+twelveThirty+"</tr><tr><td>1:00 p.m - 1:30 p.m</td>"+one+"</tr><tr><td>1:30 p.m - 2:00 p.m</td>"+oneThirty+"</tr><tr> <td>2:00 p.m - 2:30 p.m</td>"+two+"</tr><tr><td>2:30 p.m - 3:00 p.m</td></tr><tr> <td>3:00 p.m - 3:30 p.m</td></tr><tr> <td>3:30 p.m - 4:00 p.m</td></tr><tr> <td>4:00 p.m - 4:30 p.m</td></tr><tr> <td>4:30 p.m - 5:00 p.m</td></tr><tr> <td>5:00 p.m - 5:30 p.m</td></tr><tr> <td>5:30 p.m - 6:00 p.m</td></tr></table> ";
//div.innerHTML="<table border ='1' width= '100%'>"+table+"</table>";

 


//document.getElementById("lala").innerHTML="<h1>Hello</h1>";

var mondayCounter = 0;
var tuesdayCounter= 0;
var wednesdayCounter= 0;
var thursdayCounter =0;
var fridayCounter =0;
var tableCounter =0;
var maxCounter = 5;
var table ='';




function twoCourses(courseOffering,userInput1,userInput2)
{
    for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput1)
    {
        userOffering.push(courseOffering[i]);
    
    }
  }

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput2)
    {
        userOffering.push(courseOffering[i]);
    }
    
  }
}

function threeCourses(courseOffering,userInput1,userInput2,userInput3)
{
    for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput1)
    {
        userOffering.push(courseOffering[i]);
    
    }
  }

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput2)
    {
        userOffering.push(courseOffering[i]);
    }
    
  }

for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput3)
    {
        userOffering.push(courseOffering[i]);
    }
    
  }
}


function fourCourses(courseOffering,userInput1,userInput2,userInput3,userInput4)
{
    for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput1)
    {
        userOffering.push(courseOffering[i]);
    
    }
  }

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput2)
    {
        userOffering.push(courseOffering[i]);
    }
    
  }

for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput3)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput4)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 
}

function fiveCourses(courseOffering,userInput1,userInput2,userInput3,userInput4,userInput5)
{
    for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput1)
    {
        userOffering.push(courseOffering[i]);
    
    }
  }

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput2)
    {
        userOffering.push(courseOffering[i]);
    }
    
  }

for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput3)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput4)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 

   for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput5)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 
}

function sixCourses(courseOffering,userInput1,userInput2,userInput3,userInput4,userInput5,userInput6)
{
    for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput1)
    {
        userOffering.push(courseOffering[i]);
    
    }
  }

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput2)
    {
        userOffering.push(courseOffering[i]);
    }
    
  }

for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput3)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput4)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 

   for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput5)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput6)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 
}

function sevenCourses(courseOffering,userInput1,userInput2,userInput3,userInput4,userInput5,userInput6,userInput7)
{
    for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput1)
    {
        userOffering.push(courseOffering[i]);
    
    }
  }

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput2)
    {
        userOffering.push(courseOffering[i]);
    }
    
  }

for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput3)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput4)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 

   for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput5)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput6)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput7)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 
}

function eightCourses(courseOffering,userInput1,userInput2,userInput3,userInput4,userInput5,userInput6,userInput7,userInput8)
{
    for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput1)
    {
        userOffering.push(courseOffering[i]);
    
    }
  }

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput2)
    {
        userOffering.push(courseOffering[i]);
    }
    
  }

for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput3)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput4)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 

   for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput5)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput6)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput7)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 


  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput8)
    {
        userOffering.push(courseOffering[i]);
    }
    
  }
}


function nineCourses(courseOffering,userInput1,userInput2,userInput3,userInput4,userInput5,userInput6,userInput7,userInput8,userInput9)
{
    for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput1)
    {
        userOffering.push(courseOffering[i]);
    
    }
  }

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput2)
    {
        userOffering.push(courseOffering[i]);
    }
    
  }

for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput3)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput4)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 

   for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput5)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput6)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 

  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput7)
    {
        userOffering.push(courseOffering[i]);
    }
    
  } 
  for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput8)
    {
        userOffering.push(courseOffering[i]);
    }
    
  }

   for(var i = 0; i<courseOffering.length;i++)
  {
    if(courseOffering[i].name == userInput9)
    {
        userOffering.push(courseOffering[i]);
    }
    
  }
}
function eleminateRepitition(arr)
{
    for(var i = 0 ; i< (arr.length )-1;i++)
    {
       for(var j = i+1;j<arr.length;j++)
       {
        if((arr[i].CRN.number == arr[j].CRN.number)&&(arr[i].type == arr[j].type))
        {
            arr.splice(j,1);
        }
       }
    }
}










 

}
            oReq.send();
        
                });

});
            
document.getElementById("lala").addEventListener("click",function(){
  alert("HELOO");
});

function timeSort(day)
{
  var hold;
  for(var i =0;i<day.length;i++)
  {
    for(var j=0;j<(day.length)-i-1;j++)
    {

      if(parseInt(day[j].CRN.from) >parseInt(day[j+1].CRN.from))
      {
        hold = day[j];
        day[j]=day[j+1];
        day[j+1]=hold;
      }
    }
  }
}
</script>


</body>
</html>